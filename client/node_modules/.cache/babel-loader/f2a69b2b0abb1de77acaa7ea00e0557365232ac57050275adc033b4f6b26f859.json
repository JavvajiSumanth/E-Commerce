{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const WeatherComponent = () => {\n//   const [weatherData, setWeatherData] = useState(null);\n//   const lat = 40.7128; // example latitude\n//   const lon = -74.0060; // example longitude\n//   const apiKey = 'AIzaSyDCNppYHct4Rt48Ljf9GPh3FpCqN-vP6v4'; // Replace 'YOUR_API_KEY' with your actual API key\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}`);\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         setWeatherData(data);\n//       } catch (error) {\n//         console.error('Error fetching weather data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       {weatherData ? (\n//         <div>\n//           <h2>Weather for {weatherData.name}</h2>\n//           <p>Temperature: {weatherData.main.temp}°C</p>\n//           <p>Description: {weatherData.weather[0].description}</p>\n//           {/* You can display other weather data properties as needed */}\n//         </div>\n//       ) : (\n//         <p>Loading weather data...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WeatherComponent;","map":{"version":3,"names":[],"sources":["/Users/sumanthjavvaji/Desktop/React/my-app/client/src/Components/Weather.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const WeatherComponent = () => {\n//   const [weatherData, setWeatherData] = useState(null);\n//   const lat = 40.7128; // example latitude\n//   const lon = -74.0060; // example longitude\n//   const apiKey = 'AIzaSyDCNppYHct4Rt48Ljf9GPh3FpCqN-vP6v4'; // Replace 'YOUR_API_KEY' with your actual API key\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}`);\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         setWeatherData(data);\n//       } catch (error) {\n//         console.error('Error fetching weather data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       {weatherData ? (\n//         <div>\n//           <h2>Weather for {weatherData.name}</h2>\n//           <p>Temperature: {weatherData.main.temp}°C</p>\n//           <p>Description: {weatherData.weather[0].description}</p>\n//           {/* You can display other weather data properties as needed */}\n//         </div>\n//       ) : (\n//         <p>Loading weather data...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WeatherComponent;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}